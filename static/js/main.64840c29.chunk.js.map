{"version":3,"sources":["routes/paths.ts","components/LoginPage/LoginPage.tsx","components/RegistrationPage/RegistrationPage.tsx","redux/passrecovery-reducer.ts","components/PassRecoveryPage/PassRecoveryPage.tsx","App.tsx","reportWebVitals.ts","redux/login-reducer.ts","redux/registration-reducer.ts","redux/store.ts","index.tsx"],"names":["Paths","LoginPage","RegistrationPage","initialState","email","from","message","PassRecoveryPage","useEffect","axios","get","then","response","console","log","catch","dispatch","useDispatch","useState","mail","setMail","htmlFor","id","onChange","event","currentTarget","value","type","enterEmailAC","onClick","post","App","loginPage","registrationPage","passRecoveryPage","to","path","element","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","reducers","combineReducers","state","action","store","createStore","applyMiddleware","thunk","window","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oJAAYA,E,sECICC,EAA0C,WACnD,OACI,0C,SDNID,K,kBAAAA,E,gCAAAA,E,iCAAAA,M,KEIL,IAAME,EAAwD,WACjE,OACI,gD,wCCOFC,EAAiC,CACnCC,MAAO,GACPC,KAAM,6BACNC,QAAQ,uICTCC,EAAwD,WAEjEC,qBAAU,WACNC,IAAMC,IAAN,kCACKC,MAAK,SAACC,GACHC,QAAQC,IAAIF,MAEfG,OAAM,WACHF,QAAQC,IAAI,8BAErB,IAEH,IAAME,EAAWC,cAZsD,EAc/CC,mBAAS,IAdsC,mBAchEC,EAdgE,KAc1DC,EAd0D,KA2BvE,OACI,iCACI,yDACA,yDACA,gCACI,uBAAOC,QAAQ,QAAf,mBACA,uBAAOC,GAAG,QAAQC,SAjBJ,SAACC,GACvBJ,EAAQI,EAAMC,cAAcC,OAC5BV,EDGoB,SAACG,GAAD,MAAmB,CAACQ,KAAM,cAAeR,QCHpDS,CAAaT,IACtBN,QAAQC,IAAIK,IAc2CO,MAAOP,OAE1D,0FACA,8BACI,wBAAQU,QAfY,WAC5Bb,GDGG,SAACA,GACJP,IAAMqB,KAAN,yCACKnB,MAAK,SAACC,GACHI,EAPqB,CAACW,KAAM,qBAS/BZ,OAAM,WACHF,QAAQC,IAAI,+BCRpBD,QAAQC,IAAI,SAaJ,qCCjBDiB,MAnBf,WAAgB,IAELC,EAAiDhC,EAAjDgC,UAAWC,EAAsCjC,EAAtCiC,iBAAkBC,EAAoBlC,EAApBkC,iBAEpC,OACI,gCACI,sCACA,8BACI,iCAAQ,cAAC,IAAD,CAASC,GAAID,EAAb,mCAEZ,eAAC,IAAD,WACI,cAAC,IAAD,CAAOE,KAAMJ,EAAWK,QAAS,cAAC,EAAD,MACjC,cAAC,IAAD,CAAOD,KAAMH,EAAkBI,QAAS,cAAC,EAAD,MACxC,cAAC,IAAD,CAAOD,KAAMF,EAAkBG,QAAS,cAAC,EAAD,aCPzCC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqB7B,MAAK,YAAkD,IAA/C8B,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,gBCDRpC,EAAiC,GCAjCA,EAAiC,GCFjC2C,EAAWC,YAAgB,CAC7Bf,UFKwB,WAA8E,IAA7EgB,EAA4E,uDAApE7C,EACjC,OAAO6C,GELPf,iBDI+B,WAAqF,IAApFe,EAAmF,uDAA3E7C,EACxC,OAAO6C,GCJPd,iBNU+B,WAA8E,IAA7Ec,EAA4E,uDAApE7C,EAAc8C,EAAsD,uCAC5G,OAAQA,EAAOtB,MACX,IAAK,cACD,OAAO,2BAAIqB,GAAX,IAAkB5C,MAAO6C,EAAO9B,OACpC,QACI,OAAO6B,MMXNE,EAAQC,YAAYL,EAAUM,YAAgBC,MAG3DC,OAAOJ,MAAQA,ECPfK,IAASC,OACL,cAAC,IAAMC,WAAP,UACI,cAAC,IAAD,CAAUP,MAAOA,EAAjB,SACI,cAAC,IAAD,UACI,cAAC,EAAD,UAIZQ,SAASC,eAAe,SAM5BrB,M","file":"static/js/main.64840c29.chunk.js","sourcesContent":["export enum Paths {\r\n    loginPage = \"login\",\r\n    registrationPage = \"registration\",\r\n    passRecoveryPage = \"passRecovery\",\r\n}\r\n","import React from \"react\";\r\n\r\ntype LoginPagePropsType = {}\r\n\r\nexport const LoginPage: React.FC<LoginPagePropsType> = () => {\r\n    return (\r\n        <div>\r\n            Login\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\n\r\ntype RegistrationPagePropsType = {}\r\n\r\nexport const RegistrationPage: React.FC<RegistrationPagePropsType> = () => {\r\n    return (\r\n        <div>\r\n            Registration\r\n        </div>\r\n    )\r\n}","import {Dispatch} from 'redux';\r\nimport axios from \"axios\";\r\n\r\ntype InitialStateType = {\r\n    email: string,\r\n    from: string,\r\n    message: string,\r\n}\r\ntype PassRecoveryActionTypes =\r\n    | ReturnType<typeof enterEmailAC>\r\n    | ReturnType<typeof passRecoveryAC>\r\n\r\n\r\nconst initialState: InitialStateType = {\r\n    email: \"\",\r\n    from: \"maxim.kornienkou@gmail.com\",\r\n    message: `<div style=\"background-color: lime; padding: 15px\">password recovery link: <a href='http://localhost:3000/#/login'>link</a></div>`,\r\n}\r\n\r\nexport const passRecoveryReducer = (state = initialState, action: PassRecoveryActionTypes): InitialStateType => {\r\n    switch (action.type) {\r\n        case \"ENTER-EMAIL\":\r\n            return {...state, email: action.mail}\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const enterEmailAC = (mail: string) => ({type: \"ENTER-EMAIL\", mail} as const);\r\nexport const passRecoveryAC = () => ({type: \"PASS-RECOVERY\"} as const);\r\n\r\n\r\nexport const passRecoveryTC = (mail: string) => {\r\n    return (dispatch: Dispatch<PassRecoveryActionTypes>) => {\r\n        axios.post(`http://localhost:7542/2.0/auth/forgot`)\r\n            .then((response) => {\r\n                dispatch(passRecoveryAC());\r\n            })\r\n            .catch(() => {\r\n                console.log(\"hello, you are stupid\");\r\n            })\r\n    }\r\n}","import axios from \"axios\";\r\nimport React, {ChangeEvent, useEffect, useState} from \"react\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {enterEmailAC, passRecoveryAC, passRecoveryTC} from \"../../redux/passrecovery-reducer\";\r\n\r\ntype PassRecoveryPagePropsType = {}\r\n\r\nexport const PassRecoveryPage: React.FC<PassRecoveryPagePropsType> = () => {\r\n\r\n    useEffect(() => {\r\n        axios.get(`http://localhost:7542/2.0/ping`)\r\n            .then((response) => {\r\n                console.log(response);\r\n            })\r\n            .catch(() => {\r\n                console.log(\"hello, you are stupid\");\r\n            })\r\n    }, []);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const [mail, setMail] = useState(\"\");\r\n\r\n    const onChangeEnterMail = (event: ChangeEvent<HTMLInputElement>) => {\r\n        setMail(event.currentTarget.value);\r\n        dispatch(enterEmailAC(mail));\r\n        console.log(mail);\r\n    }\r\n\r\n    const onClickSendInstructions = () => {\r\n        dispatch(passRecoveryTC(mail));\r\n        console.log(\"test\");\r\n    }\r\n\r\n    return (\r\n        <form>\r\n            <h3>!!!Some project name!!!</h3>\r\n            <span>Forgot your password?</span>\r\n            <div>\r\n                <label htmlFor=\"email\">Email</label>\r\n                <input id=\"email\" onChange={onChangeEnterMail} value={mail}/>\r\n            </div>\r\n            <p>Enter your mail and we will send you further instructions</p>\r\n            <div>\r\n                <button onClick={onClickSendInstructions}>Send instructions</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}","import React from 'react';\nimport {NavLink, Route, Routes} from 'react-router-dom';\nimport './App.css';\nimport {LoginPage} from './components/LoginPage/LoginPage';\nimport {Paths} from './routes/paths';\nimport {RegistrationPage} from \"./components/RegistrationPage/RegistrationPage\";\nimport {PassRecoveryPage} from \"./components/PassRecoveryPage/PassRecoveryPage\";\n\nfunction App() {\n\n    const {loginPage, registrationPage, passRecoveryPage} = Paths;\n\n    return (\n        <div>\n            <h2>Test</h2>\n            <div>\n                <button><NavLink to={passRecoveryPage}>Password recovery</NavLink></button>\n            </div>\n            <Routes>\n                <Route path={loginPage} element={<LoginPage />}/>\n                <Route path={registrationPage} element={<RegistrationPage />}/>\n                <Route path={passRecoveryPage} element={<PassRecoveryPage />}/>\n            </Routes>\n        </div>\n    );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","type InitialStateType = {\r\n\r\n}\r\ntype ActionTypesLoginReducer = {\r\n\r\n}\r\n\r\n\r\nconst initialState: InitialStateType = {\r\n\r\n}\r\n\r\nexport const loginReducer = (state = initialState, action: ActionTypesLoginReducer): InitialStateType => {\r\n    return state;\r\n}","type InitialStateType = {\r\n\r\n}\r\ntype ActionTypesRegistrationReducer = {\r\n\r\n}\r\n\r\n\r\nconst initialState: InitialStateType = {\r\n\r\n}\r\n\r\nexport const registrationReducer = (state = initialState, action: ActionTypesRegistrationReducer): InitialStateType => {\r\n    return state;\r\n}","import {applyMiddleware, combineReducers, createStore} from \"redux\"\r\nimport thunk from \"redux-thunk\";\r\nimport {loginReducer} from \"./login-reducer\";\r\nimport { registrationReducer } from \"./registration-reducer\";\r\nimport { passRecoveryReducer } from \"./passrecovery-reducer\";\r\n\r\nconst reducers = combineReducers({\r\n    loginPage: loginReducer,\r\n    registrationPage: registrationReducer,\r\n    passRecoveryPage: passRecoveryReducer,\r\n});\r\n\r\nexport type AppRootStateType = ReturnType<typeof reducers>\r\nexport const store = createStore(reducers, applyMiddleware(thunk))\r\n\r\n//@ts-ignore\r\nwindow.store = store","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {HashRouter} from \"react-router-dom\";\nimport {Provider} from \"react-redux\";\nimport {store} from \"./redux/store\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <HashRouter>\n                <App/>\n            </HashRouter>\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}