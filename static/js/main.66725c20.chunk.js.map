{"version":3,"sources":["routes/paths.ts","components/LoginPage/LoginPage.tsx","components/RegistrationPage/RegistrationPage.tsx","components/PassRecoveryPage/PassRecoveryPage.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Paths","LoginPage","RegistrationPage","PassRecoveryPage","useEffect","axios","get","then","response","console","log","catch","useState","setMail","htmlFor","id","onChange","event","currentTarget","value","App","loginPage","registrationPage","passRecoveryPage","to","path","element","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oJAAYA,E,sECICC,EAA0C,WACnD,OACI,0C,SDNID,K,kBAAAA,E,gCAAAA,E,iCAAAA,M,KEIL,IAAME,EAAwD,WACjE,OACI,gD,wBCDKC,EAAwD,WAEjEC,qBAAU,WACNC,IAAMC,IAAN,kCACKC,MAAK,SAACC,GACHC,QAAQC,IAAIF,MAEfG,OAAM,WACHF,QAAQC,IAAI,8BAErB,IAVoE,MAY/CE,mBAAS,IAZsC,mBAY1DC,GAZ0D,WAkBvE,OACI,iCACI,yDACA,yDACA,gCACI,uBAAOC,QAAQ,QAAf,mBACA,uBAAOC,GAAG,QAAQC,SAVJ,SAACC,GACvBJ,EAAQI,EAAMC,cAAcC,aAWxB,6FACA,8BACI,6DCLDC,MApBf,SAASA,IAAO,IAELC,EAAiDrB,EAAjDqB,UAAWC,EAAsCtB,EAAtCsB,iBAAkBC,EAAoBvB,EAApBuB,iBAEpC,OACI,gCACI,sCACA,8BACI,iCAAQ,cAAC,IAAD,CAASC,GAAID,EAAb,mCAEZ,eAAC,IAAD,WACI,cAAC,IAAD,CAAOE,KAAM,IAAKC,QAAS,cAAC,EAAD,MAC3B,cAAC,IAAD,CAAOD,KAAMJ,EAAWK,QAAS,cAAC,EAAD,MACjC,cAAC,IAAD,CAAOD,KAAMH,EAAkBI,QAAS,cAAC,EAAD,MACxC,cAAC,IAAD,CAAOD,KAAMF,EAAkBG,QAAS,cAAC,EAAD,aCRzCC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBtB,MAAK,YAAkD,IAA/CuB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCFdO,IAASC,OACL,cAAC,IAAMC,WAAP,UACI,cAAC,IAAD,UACI,cAAC,EAAD,QAGRC,SAASC,eAAe,SAM5BZ,M","file":"static/js/main.66725c20.chunk.js","sourcesContent":["export enum Paths {\r\n    loginPage = \"login\",\r\n    registrationPage = \"registration\",\r\n    passRecoveryPage = \"passRecovery\",\r\n}\r\n","import React from \"react\";\r\n\r\ntype LoginPagePropsType = {}\r\n\r\nexport const LoginPage: React.FC<LoginPagePropsType> = () => {\r\n    return (\r\n        <div>\r\n            Login\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\n\r\ntype RegistrationPagePropsType = {}\r\n\r\nexport const RegistrationPage: React.FC<RegistrationPagePropsType> = () => {\r\n    return (\r\n        <div>\r\n            Registration\r\n        </div>\r\n    )\r\n}","import axios from \"axios\";\r\nimport React, {ChangeEvent, useEffect, useState} from \"react\";\r\n\r\ntype PassRecoveryPagePropsType = {}\r\n\r\nexport const PassRecoveryPage: React.FC<PassRecoveryPagePropsType> = () => {\r\n\r\n    useEffect(() => {\r\n        axios.get(`http://localhost:7542/2.0/ping`)\r\n            .then((response) => {\r\n                console.log(response);\r\n            })\r\n            .catch(() => {\r\n                console.log(\"hello, you are stupid\");\r\n            })\r\n    }, [])\r\n\r\n    const [mail, setMail] = useState(\"\")\r\n\r\n    const onChangeEnterMail = (event: ChangeEvent<HTMLInputElement>) => {\r\n        setMail(event.currentTarget.value);\r\n    }\r\n\r\n    return (\r\n        <form>\r\n            <h3>!!!Some project name!!!</h3>\r\n            <span>Forgot your password?</span>\r\n            <div>\r\n                <label htmlFor=\"email\">Email</label>\r\n                <input id=\"email\" onChange={onChangeEnterMail}/>\r\n            </div>\r\n            <span>Enter your mail and we will send you further instructions</span>\r\n            <div>\r\n                <button>Send instructions</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}","import React from 'react';\nimport {NavLink, Route, Routes} from 'react-router-dom';\nimport './App.css';\nimport {LoginPage} from './components/LoginPage/LoginPage';\nimport {Paths} from './routes/paths';\nimport {RegistrationPage} from \"./components/RegistrationPage/RegistrationPage\";\nimport {PassRecoveryPage} from \"./components/PassRecoveryPage/PassRecoveryPage\";\n\nfunction App() {\n\n    const {loginPage, registrationPage, passRecoveryPage} = Paths;\n\n    return (\n        <div>\n            <h2>Test</h2>\n            <div>\n                <button><NavLink to={passRecoveryPage}>Password recovery</NavLink></button>\n            </div>\n            <Routes>\n                <Route path={'/'} element={<App />}/>\n                <Route path={loginPage} element={<LoginPage />}/>\n                <Route path={registrationPage} element={<RegistrationPage />}/>\n                <Route path={passRecoveryPage} element={<PassRecoveryPage />}/>\n            </Routes>\n        </div>\n    );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {HashRouter} from \"react-router-dom\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <HashRouter>\n            <App/>\n        </HashRouter>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}